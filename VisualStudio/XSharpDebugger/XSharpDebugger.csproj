<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!--Visual Studio will use the value of will use MinimumVisualStudioVersion to detect if a project needs to be updated.
    To allow the project to be loaded in multiple VS versions, conditionally check the project -->
    <MinimumVisualStudioVersion Condition="'$(VisualStudioVersion)' == '15.0'">15.0</MinimumVisualStudioVersion>
    <MinimumVisualStudioVersion Condition="'$(VisualStudioVersion)' != '15.0'">14.0</MinimumVisualStudioVersion>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">14.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <ProjectTypeGuids>{82b43b9b-a64c-4715-b499-d71e9ca2bd60};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <RootNamespace>XSharp.Debugger</RootNamespace>
    <AssemblyName>XSharpDebugger</AssemblyName>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(SolutionDir)Common\XSharp.snk</AssemblyOriginatorKeyFile>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <TargetFrameworkMoniker>.NETFramework,Version=v4.6</TargetFrameworkMoniker>
    <TargetFrameworkProfile />
    <ProjectGuid>{16272550-75E6-4B9D-91E3-653BD141C755}</ProjectGuid>
    <IsWebBootstrapper>false</IsWebBootstrapper>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccAuxPath>SAK</SccAuxPath>
    <SccProvider>SAK</SccProvider>
    <BootstrapperEnabled>true</BootstrapperEnabled>
    <IncludeDebugSymbolsInVSIXContainer>true</IncludeDebugSymbolsInVSIXContainer>
    <BaseOutputPath>$(SolutionDir)Binaries</BaseOutputPath>
    <IntermediateOutputPath>$(BaseOutputPath)\Obj\$(Configuration)\$(AssemblyName)\</IntermediateOutputPath>
    <GeneratePkgDefFile>false</GeneratePkgDefFile>
    <IncludeDebugSymbolsInLocalVSIXDeployment>true</IncludeDebugSymbolsInLocalVSIXDeployment>
    <CopyBuildOutputToOutputDirectory>true</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>true</CopyOutputSymbolsToOutputDirectory>
    <IncludeAssemblyInVSIXContainer>true</IncludeAssemblyInVSIXContainer>
    <ExtensionInstallationFolder>XSharp\Debugger</ExtensionInstallationFolder>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <VsixType>v3</VsixType>
	<DeployExtension Condition=" '$(Configuration)' == 'Release' " >false</DeployExtension>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>$(BaseOutputPath)\$(Configuration)</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DocumentationFile>
    </DocumentationFile>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>$(BaseOutputPath)\$(Configuration)</OutputPath>
    <DefineConstants>XSHARP</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
    <PlatformTarget>x86</PlatformTarget>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup>
    <VSSDKRoot Condition="'$(DevEnvDir)'!='' and Exists('$(DevEnvDir)..\..\VSSDK\VisualStudioIntegration\')">$([System.IO.Path]::GetFullPath('$(DevEnvDir)..\..\VSSDK\'))</VSSDKRoot>
    <VSSDKRoot Condition="'$(VSSDKRoot)'==''">$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\VSIP\14.0\@InstallDir)</VSSDKRoot>
    <VSSDKRoot Condition="'$(VSSDKRoot)'==''">$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\VSIP\14.0\@InstallDir)</VSSDKRoot>
    <VSSDKRoot Condition="'$(VSSDKRoot)'!='' and '$(VSSDKRoot.EndsWith(&quot;\&quot;))'=='false'">$(VSSDKRoot)\</VSSDKRoot>
    <!--Root directory to Concord SDK install; includes the trailing backslash '\'.-->
    <ConcordSDKDir>$(VSSDKRoot)VisualStudioIntegration\</ConcordSDKDir>
    <VsdConfigFile>$(OutputPath)\XSharpDebugger.vsdconfig</VsdConfigFile>
  </PropertyGroup>
  <PropertyGroup>
    <StartAction>Program</StartAction>
    <StartProgram>$(DevEnvDir)devenv.exe</StartProgram>
    <StartWorkingDirectory>$(DevEnvDir)</StartWorkingDirectory>
    <StartArguments>/rootsuffix Exp</StartArguments>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\..\Common\CommonAssemblyInfo.cs">
      <Link>CommonAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="..\..\Common\Constants.cs">
      <Link>Constants.cs</Link>
    </Compile>
    <Compile Include="AddressComparer.cs" />
    <Compile Include="ExpressionCompiler\XSharpExpressionCompiler.cs" />
    <Compile Include="Formatter\XSharpFormatter.cs" />
    <Compile Include="FrameDecoder\XSharpFrameDecoder.cs" />
    <Compile Include="Import\ImportedField.cs" />
    <Compile Include="Import\ImportedFile.cs" />
    <Compile Include="Import\ImportedMember.cs" />
    <Compile Include="Import\ImportedMethod.cs" />
    <Compile Include="Import\ImportedModule.cs" />
    <Compile Include="Import\ImportedType.cs" />
    <Compile Include="Import\Importer.cs" />
    <Compile Include="Import\XSharpTypeProvider.cs" />
    <Compile Include="LocalVariable.cs" />
    <Compile Include="TypeSystem.cs" />
    <Compile Include="Variable.cs" />
    <Compile Include="InspectionScope.cs" />
    <Compile Include="InspectionSession.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Utility.cs" />
  </ItemGroup>
  <ItemGroup>
    <VsdConfigXmlFiles Include="ExpressionCompiler\ExpressionCompiler.vsdconfigxml" />
    <VsdConfigXmlFiles Include="Formatter\Formatter.vsdconfigxml" />
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
    <VsdConfigXmlFiles Include="FrameDecoder\FrameDecoder.vsdconfigxml" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualStudio.Debugger.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(DevEnvDir)\Microsoft.VisualStudio.Debugger.Engine.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Debugger.Metadata, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(DevEnvDir)\Remote Debugger\x86\Microsoft.VisualStudio.Debugger.Metadata.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\System.Collections.Immutable.1.5.0\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
      <SpecificVersion>False</SpecificVersion>
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Reflection.Metadata, Version=1.4.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\System.Reflection.Metadata.1.4.2\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <VSIXSourceItem Include="$(VsdConfigFile)">
      <VSIXSubPath>$(AssemblyVSIXSubPath)</VSIXSubPath>
    </VSIXSourceItem>
  </ItemGroup>
  <ItemGroup>
    <None Include="source.extension.vsixmanifest" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="readme.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="License.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <Content Include="XSharp.ico">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <Content Include="XSharpDebugger.pkgdef">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <Content Include="XSharpVSIXLogo.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
  </ItemGroup>
  <PropertyGroup>
    <!--
    To specify a different registry root to register your package, uncomment the TargetRegistryRoot
    tag and specify a registry root in it.
    <TargetRegistryRoot></TargetRegistryRoot>
    -->
    <RegisterOutputPackage>true</RegisterOutputPackage>
    <RegisterWithCodebase>true</RegisterWithCodebase>
  </PropertyGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != ''" />
  <Import Project="$(ConcordSDKDir)Tools\Bin\Microsoft.VSDebugger.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>